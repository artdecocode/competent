{
"version":3,
"file":"compile/competent.js",
"lineCount":759,
"mappings":"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",
"sources":["node_modules/@depack/render/src/util.js","node_modules/@depack/render/src/lib/index.js","node_modules/@depack/render/src/index.js","node_modules/mismatch/src/index.js","node_modules/rexml/src/lib/res-simple.js","node_modules/rexml/src/index.js","node_modules/rexml/src/lib/index.js","node_modules/stream/index.js","node_modules/restream/src/lib/index.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/lib.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/restream/src/Replaceable.js","node_modules/tty/index.js","node_modules/util/index.js","node_modules/@idio/debug/src/ms.js","node_modules/@idio/debug/src/bytes.js","node_modules/erte/src/index.js","node_modules/@idio/debug/src/modifiers/f.js","node_modules/@idio/debug/src/node.js","node_modules/@idio/debug/src/common.js","src/make-comps.js","src/lib/make-io.js","src/index.js","node_modules/@idio/debug/src/index.js","src/depack.js","src/lib/index.js"],
"sourcesContent":["// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n\nexport let encodeEntities = s => `${s}`\n  .replace(/&/g, '&amp;')\n  .replace(/</g, '&lt;')\n  .replace(/>/g, '&gt;')\n  .replace(/\"/g, '&quot;')\n\nexport let indent = (s, char) => `${s}`.replace(/(\\n+)/g, '$1' + (char || '\\t'))\n\nexport let isLargeString = (s, length = 40, ignoreLines = false) => (`${s}`.length>length || (!ignoreLines && `${s}`.indexOf('\\n')!=-1) || `${s}`.indexOf('<')!==-1)\n\nconst JS_TO_CSS = {}\n\n/**\n * Convert an Object style to a CSSText string.\n * @param {!Object} s\n */\nexport function styleObjToCss(s) {\n  let str = ''\n  for (let prop in s) {\n    let val = s[prop]\n    if (val!=null) {\n      if (str) str += ' '\n      // str += jsToCss(prop);\n      str += JS_TO_CSS[prop] || (JS_TO_CSS[prop] = prop.replace(/([A-Z])/g,'-$1').toLowerCase())\n      str += ': '\n      str += val\n      if (typeof val=='number' && IS_NON_DIMENSIONAL.test(prop)===false) {\n        str += 'px'\n      }\n      str += ';'\n    }\n  }\n  return str || undefined\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {!preact.VNode} vnode The VNode to get props for\n */\nexport function getNodeProps(vnode) {\n  const props = {\n    ...vnode.attributes, children: vnode.children,\n  }\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps!==undefined) {\n    for (let i in defaultProps) {\n      if (props[i]===undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */","import { encodeEntities, styleObjToCss } from '../util'\n\n/**\n * Maps attributes to `name=\"value\"` strings, and returns html if dangerouslySetInnerHTML is given.\n * @param {!Object<string, ?>} attributes\n * @param {string} nodeName\n * @param {Object} [props]\n * @param {boolean} [props.allAttributes=false]\n * @param {boolean} [props.xml=false]\n * @param {boolean} [props.isSvgMode=false]\n * @param {boolean} [props.sort=false]\n */\nexport const mapAttributes = (attributes, nodeName, {\n  allAttributes, xml, isSvgMode, sort, selectValue,\n} = {}) => {\n  let html\n  const attrs = Object.keys(attributes)\n  if (sort) attrs.sort()\n  const a = attrs.map((name) => {\n    let v = attributes[name]\n    if (name == 'children') return\n    if (name.match(/[\\s\\n\\\\/='\"\\0<>]/)) return\n    if (!allAttributes && ['key', 'ref'].includes(name)) return\n    if (name == 'className') {\n      if (attributes.class) return // class takes precedence\n      name = 'class'\n    } else if (name == 'htmlFor') {\n      if (attributes.for) return // class takes precedence\n      name = 'for'\n    } else if (name == 'srcSet') {\n      if (attributes.srcset) return // srcset takes precedence\n      name = 'srcset'\n    }\n    if (isSvgMode && name.match(/^xlink:?./)) {\n      name = name.toLowerCase().replace(/^xlink:?/, 'xlink:')\n    }\n    if (name == 'style' && v && typeof v == 'object') {\n      v = styleObjToCss(v)\n    }\n    if (name == 'dangerouslySetInnerHTML') {\n      html = v && v.__html // side-effect\n    } else if ((v || v===0 || v==='') && typeof v!='function') {\n      if (v===true || v==='') {\n        v = name\n        // in non-xml mode, allow boolean attributes\n        if (!xml) return name\n      }\n      let s = ''\n      if (name == 'value') {\n        if (nodeName == 'select') {\n          selectValue = v\n          return\n        } else if (nodeName == 'option' && selectValue == v) {\n          s = 'selected '\n        }\n      }\n      return `${s}${name}=\"${encodeEntities(v)}\"`\n    }\n  }).filter(Boolean)\n  return { mappedAttributes: a, html, selectValue }\n}\n\nexport const inlineElements = [\n  'a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br',\n  'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del',\n  'dfn', 'em', 'embed', 'i', 'iframe', 'img', 'input', 'ins',\n  'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object',\n  'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp',\n  'slot', 'small', 'span', 'strong', 'sub',\n  'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var',\n  'video', 'wbr',\n]","import { encodeEntities, indent, isLargeString, getNodeProps } from './util'\nimport { mapAttributes, inlineElements } from './lib'\n\n// components without names, kept as a hash for later comparison to return consistent UnnamedComponentXX names.\nconst UNNAMED = []\n\nconst VOID_ELEMENTS = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/\nconst INLINE_ELEMENTS = new RegExp(`^(${inlineElements.join('|')})$`)\n\n/** Only render elements, leaving Components inline as `<ComponentName ... />`.\n * This method is just a convenience alias for `render(vnode, context, { shallow:true })`\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!Object} [context]  Optionally pass an initial context object through the render path.\n */\nconst shallowRender = (vnode, context) => renderToString(vnode, { shallow: true }, context)\n\n// const prettyAttributeHook = (name, value, context, opts) => {\n//   let indentChar = typeof opts.pretty=='string' ? opts.pretty : '  '\n//   return `\\n${indentChar}${name}=\"${encodeEntities(value)}\"`\n// }\n\n/**\n * Render Preact JSX Components to an HTML string.\n * @param {preact.VNode} vnode JSX VNode to render.\n * @param {!_depack.RenderConfig} [config] Rendering options.\n */\nconst render = (vnode, config = {}, context = {}) => {\n  const { addDoctype, pretty } = config\n  const res = renderToString(vnode, config, context)\n  if (addDoctype) return `<!doctype html>${pretty ? '\\n': ''}${res}`\n  return res\n}\n\n/** Render Preact JSX + Components to an HTML string.\n * @param {preact.VNode|boolean|number|string|undefined} vnode\n * @param {!_depack.RenderConfig} [opts]\n * @param {!Object} [context]\n * @param {boolean} [inner]\n * @param {boolean} [isSvgMode]\n * @param {string} [selectValue] Used to set the value of options via select's value `attribute`.\n */\nfunction renderToString(\n  vnode, opts = {}, context = {}, inner = false, isSvgMode = false, selectValue,\n) {\n  if (vnode==null || typeof vnode=='boolean') {\n    return ''\n  }\n\n  const {\n    pretty = false,\n    shallow = false,\n    renderRootComponent = false,\n    shallowHighOrder = false,\n    sortAttributes,\n    allAttributes,\n    xml,\n    initialPadding = 0,\n    closeVoidTags = false,\n  } = opts\n\n  let { lineLength = 40 } = opts\n  lineLength -= initialPadding\n\n  let { nodeName, attributes = {} } = vnode\n\n  const noPretty = ['textarea', 'pre'].includes(nodeName)\n  const ip = ' '.repeat(initialPadding)\n\n  const indentChar = typeof pretty == 'string' ? pretty :\n    `  ${ip}`\n\n  // #text nodes\n  if (typeof vnode!='object' && !nodeName) {\n    return encodeEntities(vnode)\n  }\n\n  // components\n  if (typeof nodeName=='function') {\n    // nodeName = /** @type {!Function} */ (nodeName)\n    if (shallow && (inner || !renderRootComponent)) {\n      nodeName = getComponentName(nodeName)\n    }\n    else {\n      let props = getNodeProps(/** @type {!preact.VNode} */ (vnode)),\n        rendered\n\n      if (!nodeName.prototype || typeof nodeName.prototype.render!='function') {\n        // stateless functional components\n        rendered = nodeName(props, context)\n      }\n      else {\n        // class-based components\n        let c = /** @type {!preact.Component} */ (new nodeName(props, context))\n        // turn off stateful re-rendering:\n        c._disable = c.__x = true\n        c.props = props\n        c.context = context\n        if (nodeName.getDerivedStateFromProps) c.state = {\n          ...c.state,\n          ...nodeName.getDerivedStateFromProps(c.props, c.state),\n        }\n        else if (c.componentWillMount) c.componentWillMount()\n        rendered = c.render(c.props, c.state, c.context)\n\n        if (c.getChildContext) {\n          context = { ...context, ...c.getChildContext() }\n        }\n      }\n\n      return renderToString(rendered, opts, context, shallowHighOrder, isSvgMode, selectValue)\n    }\n  }\n\n  // render JSX to HTML\n  let s = '', html\n\n  let mappedAttributes\n  ;({ mappedAttributes, html, selectValue } = mapAttributes(/** @type {!Object} */ (attributes), nodeName, {\n    allAttributes, xml, isSvgMode, sort: sortAttributes, selectValue,\n  }))\n\n  // account for >1 multiline attribute\n  if (pretty) {\n    const nl = `<${nodeName}`\n    let cl = nl.length\n    s = mappedAttributes.reduce((acc, current) => {\n      const newLength = cl + 1 + current.length\n      if (newLength > lineLength) {\n        cl = indentChar.length\n        return `${acc}\\n${indentChar}${current}`\n      }\n      cl = newLength\n      return `${acc} ${current}`\n    }, '')\n  } else {\n    s = mappedAttributes.length ? ' ' + mappedAttributes.join(' ') : ''\n  }\n\n  s = `<${nodeName}${s}>`\n  if (`${nodeName}`.match(/[\\s\\n\\\\/='\"\\0<>]/)) throw s\n\n  let isVoid = `${nodeName}`.match(VOID_ELEMENTS)\n  if (closeVoidTags) {\n    if (isVoid) s = s.replace(/>$/, ' />')\n  }\n\n  let pieces = []\n  if (html) {\n    // if multiline, indent.\n    if (!noPretty && pretty && (isLargeString(html) || html.length + getLastLineLength(s) > lineLength)) {\n      html = '\\n' + indentChar + indent(html, indentChar)\n    }\n    s += html\n  }\n  else if (vnode.children) {\n    let hasLarge = pretty && s.includes('\\n')\n    pieces = vnode.children.map((child) => {\n      if (child==null || child===false) return\n      const childSvgMode = nodeName == 'svg' ? true : nodeName == 'foreignObject' ? false : isSvgMode\n      const ret = renderToString(child, opts, context, true, childSvgMode, selectValue)\n      if (!ret) return\n      if (pretty && ret.length + getLastLineLength(s) > lineLength)\n        hasLarge = true\n      return ret\n    }).filter(Boolean)\n\n    if (pretty && hasLarge && !noPretty) {\n      for (let i=pieces.length; i--;) {\n        pieces[i] = '\\n' + indentChar + indent(pieces[i], indentChar)\n      }\n    }\n  }\n\n  if (pieces.length) {\n    s += pieces.join('')\n  }\n  else if (xml) {\n    return s.substring(0, s.length-1) + ' />'\n  }\n\n  if (!isVoid) {\n    // inline elements should not have additional whitespace\n    // however if there were other tags inside them, that should be fine\n    const lastPiece = pieces[pieces.length - 1]\n    const isInline = `${nodeName}`.match(INLINE_ELEMENTS) && (lastPiece ? !/>$/.test(lastPiece) : true)\n    if (!isInline && !noPretty && pretty && s.includes('\\n')) s += `\\n${ip}`\n    s += `</${nodeName}>`\n  }\n\n  return s\n}\n\n/**\n * @param {!Function} component\n */\nfunction getComponentName(component) {\n  return component.displayName || component!==Function && component.name || getFallbackComponentName(component)\n}\n\n/**\n * @param {!Function} component\n */\nfunction getFallbackComponentName(component) {\n  /** @type {string} */\n  const str = Function.prototype.toString.call(component)\n\n  let name = (str.match(/^\\s*function\\s+([^( ]+)/) || '')[1]\n  if (!name) {\n    // search for an existing indexed name for the given component:\n    let index = -1\n    for (let i=UNNAMED.length; i--; ) {\n      if (UNNAMED[i]===component) {\n        index = i\n        break\n      }\n    }\n    // not found, create a new indexed name:\n    if (index<0) {\n      index = UNNAMED.push(component) - 1\n    }\n    name = `UnnamedComponent${index}`\n  }\n  return name\n}\n\nexport default render\n\nexport { shallowRender }\n\nconst getLastLineLength = (s) => {\n  const st = s.split('\\n')\n  const lastLine = st[st.length - 1]\n  return lastLine.length\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').RenderConfig} _depack.RenderConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Component} preact.Component\n */","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","const nameRe = /([^\\s>=/]+)/\nconst valRe = /(?:\"([\\s\\S]*?)\"|'([\\s\\S]*?)')/\n\nexport const attributeRe = new RegExp(`${nameRe.source}(?:\\\\s*=\\\\s*${valRe.source})?`, 'g')\n\n/**\n * This regex will match all attributes as a string inside of element, e.g., matching `<el attr=\"abc\" bool/>` will result in `attr=\"abc\" bool`.\n */\nexport const attributesRe = new RegExp(`(?:\\\\s+((?:${attributeRe.source}\\\\s*)*))`)\n","import mismatch from 'mismatch'\nimport { extractProps as extractPropsSpec, getPropValue } from './lib'\nimport { attributesRe } from './lib/res'\nimport { attributesRe as simple, attributeRe as simpleAttribute } from './lib/res-simple'\n\nconst execRes = (re, s) => {\n  const res = re.exec(s)\n  if (!res) return res\n  const [, ...args] = res\n  return args\n}\n\n/**\n * Extract member elements from an XML string. Numbers and booleans will be parsed into their JS types.\n * @param {string|!Array<string>} tag Which tag to extract, e.g., `div`. Can also pass an array of tags, in which case the name of the tag will also be returned.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n * <html>\n *   <div id=\"1\" class=\"test\" contenteditable>\n *     Hello World\n *   </div>\n * </html>\n * `\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nconst extractTags = (tag, string) => {\n  const tags = Array.isArray(tag) ? tag : [tag]\n  const t = tags.join('|')\n  const end1 = /\\s*\\/>/\n  const end2 = />([\\s\\S]+?)?<\\/\\1>/\n  const re = new RegExp(`<(${t})${simple.source}?(?:${end1.source}|${end2.source})`, 'g')\n\n  const matches = mismatch(re, string, ['t', 'a', 'v', 'v1', 'v2', 'c'])\n  const res = matches.map(({ 't': tagName, 'a': attributes = '', 'c': content = '' }) => {\n    const attrs = attributes.replace(/\\/$/, '').trim()\n    const props = extractProps(attrs)\n    return { content, props, tag: tagName }\n  })\n  return res\n}\n\n/**\n * Extracts the properties from the attributes part of the tag and returns them as an object. It will parse values if not specified otherwise.\n * @param {string} string The attribute part of the tag.\n * @param {boolean} parseValue Whether to transform the value into its value.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const m = mismatch(simpleAttribute, string, ['key', 'val', 'def', 'f'])\n  const props = m\n    .reduce((acc, { 'key': key, 'val': val }) => {\n      if (val === undefined) {\n        acc[key] = true\n        return acc\n      }\n      acc[key] = parseValue ? getPropValue(val) : val\n      return acc\n    }, {})\n  return props\n}\n\n/**\n * Extract member elements from an XML string using the complex regular expression to match attributes that confirms to the XML spec. Numbers and booleans will be parsed into their JS types.\n * @param {string} tag Which tag to extract, e.g., `div`.\n * @param {string} string The XML string.\n * @example\n *\n * const xml = `\n<html>\n  <div id=\"1\" class=\"test\" contenteditable>\n    Hello World\n  </div>\n</html>\n`\n * const [{ content, props }] = extractTag('div', xml)\n * // content: Hello World\n * // props: { id: 1, class: 'test', contenteditable: true }\n */\nexport const extractTagsSpec = (tag, string) => {\n  const end1 = /\\s*\\/>/\n  const end2 = new RegExp(`>([\\\\s\\\\S]+?)?</${tag}>`)\n  const re = new RegExp(`<${tag}${attributesRe.source}?(?:${end1.source}|${end2.source})`, 'gu')\n  const r = []\n\n  let t\n  while ((t = execRes(re, string))) {\n    if (!t.length) continue\n    const [_p = '', _c = ''] = t\n    const p = _p.replace(/\\/$/, '').trim()\n    const props = extractProps(p)\n    const item = {\n      props,\n      content: _c,\n    }\n    r.push(item)\n  }\n  return r\n}\n\nexport default extractTags\nexport { extractPropsSpec }","import { attributeRe } from './res'\n\nexport const getPropValue = (val) => {\n  if (val == 'true') return true\n  if (val == 'false') return false\n  if (/^\\d+$/.test(val)) {\n    return parseInt(val, 10)\n  }\n  return val\n}\n\n/**\n * Parse the arguments part of an XML element\n * @param {string} string String to extract attributes from.\n * @param {boolean} parseValue Parse `true` and `false` values into a boolean, and numbers into integers. Default `true`.\n */\nexport const extractProps = (string, parseValue = true) => {\n  const o = {}\n  const re = new RegExp(`\\\\s+${attributeRe.source}`, 'gu')\n  ;` ${string}`.replace(re, (match, name,  doubleQuoteVal, singleQuoteVal) => {\n    const value = singleQuoteVal || doubleQuoteVal\n    const v = value === undefined ? true : value\n    const val = parseValue ? getPropValue(v) : v\n    o[name] = val\n  })\n  return o\n}\n","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","export function checkRule(reObject) {\n  if (typeof reObject != 'object') {\n    return false\n  }\n  const { re, replacement } = reObject\n  const hasRe = re instanceof RegExp\n  const type = ['string', 'function'].indexOf(typeof replacement) != -1\n  return hasRe && type\n}\n\nexport const hideStack = (commonError, thrownError) => {\n  if (!(thrownError instanceof Error)) throw thrownError\n  const [, , commonLine] = commonError.stack.split('\\n', 3)\n  const i = thrownError.stack.indexOf(commonLine)\n  if (i == -1) throw thrownError\n  const stack = thrownError.stack.substr(0, i - 1)\n  const li = stack.lastIndexOf('\\n')\n  thrownError.stack = stack.substr(0, li)\n  throw thrownError\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import Stream, { Transform } from 'stream'\nimport cleanStack from '@artdeco/clean-stack'\nimport { collect } from 'catchment'\nimport { checkRule, hideStack } from './lib'\n\nexport default class Replaceable extends Transform {\n  /**\n   * Replaceable class that extends Transform and pushes data when it's done replacing each incoming chunk. If the replacement is passed as a function, it will work in the same way as the replacer for `string.replace` method (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace), taking the `match` as the first argument, and matched `p1`, `p2`, _etc_ parameters as following arguments. The replacer can also be an async function.\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules A single replacement rule, or multiple rules.\n   * @param {!stream.TransformOptions} [options] The options for the transform stream.\n   * @example\n   *\n```\n// markdown __ to html <em> implementation\nconst stream = replaceStream({\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n   */\n  constructor(rules, options) {\n    super(options)\n    const re = Array.isArray(rules) ? rules : [rules]\n    const fr = re.filter(checkRule)\n    this.rules = fr\n    /**\n     * Whether the _Replaceable_ will not apply any more rules.\n     * @type {boolean}\n     */\n    this._broke = false\n    this._options = options\n  }\n\n  /**\n   * Creates a new replaceable to replace the given string, buffer or stream using the rules of the current stream. Calling `brake` will also set `_broke` on the parent stream.\n   * @param {string|!Buffer|!Stream} input The input to replace.\n   * @param {!Object} [context] The context to assign to the new replaceable.\n   */\n  async replace(input, context) {\n    const replaceable = new Replaceable(this.rules, this._options)\n    if (context) Object.assign(replaceable, context)\n    const res = await Replaceable.replace(replaceable, input)\n    if (replaceable._broke) this.brake()\n    if (context) Object.keys(context).forEach(key => {\n      context[key] = replaceable[key]\n    })\n    return res\n  }\n  /**\n   * The method to end the stream with given data, and collect the result.\n   * @param {!Replaceable} replaceable\n   * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n   */\n  static async replace(replaceable, input) {\n    return replace(replaceable, input)\n  }\n\n  /**\n   * Stop executing further after the current rule.\n   */\n  brake() {\n    this._broke = true\n  }\n\n  /**\n   * @param {string|!Buffer} chunk The incoming chunk, or an object if the stream was started in object mode.\n   */\n  async reduce(chunk) {\n    /** @type {string} */\n    const s = await this.rules.reduce(async (acc, { re, replacement }) => {\n      /** @type {string} */\n      let string = await acc\n      if (this._broke) return string\n\n      if (typeof replacement == 'string') {\n        string = string.replace(re, replacement)\n      } else {\n        const promises = []\n        let commonError\n        const t = string.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) {\n              if (promises.length)\n                return promises.push(Promise.resolve(match))\n              return match\n            }\n            const p = replacement.call(this, match, ...args)\n            if (p instanceof Promise) {\n              promises.push(p)\n            }\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        if (promises.length) {\n          try { // hide stack only for when throw happens before awaits\n            const data = await Promise.all(promises)\n            string = string.replace(re, () => data.shift())\n          } catch (e) {\n            hideStack(commonError, e)\n          }\n        } else {\n          string = t\n        }\n      }\n      return string\n    }, `${chunk}`)\n\n    return s\n  }\n  /**\n   * @suppress {checkTypes}\n   * @returns {!Promise}\n   */\n  async _transform(chunk, _, next) {\n    try {\n      const s = await this.reduce(chunk)\n      this.push(s)\n      next()\n    } catch (e) {\n      const s = cleanStack(e.stack)\n      e.stack = s\n      next(e)\n    }\n  }\n}\n\n/**\n * The method to end the stream with given data, and collect the result.\n * @param {!Replaceable} replaceable\n * @param {string|!Buffer|!Stream} input The data or stream to end the _Replaceable_ with.\n */\nexport async function replace(replaceable, input) {\n  if (input instanceof Stream) {\n    input.pipe(replaceable)\n  } else {\n    replaceable.end(input)\n  }\n  /** @type {string} */\n  const data = await collect(replaceable)\n  return data\n}\n\n/**\n * The class for when serial execution of asynchronous replacements withing the same rule are needed.\n */\nexport class SerialAsyncReplaceable extends Replaceable {\n  /**\n   * @param {!(_restream.Rule|Array<!_restream.Rule>)} rules\n   */\n  constructor(rules) {\n    super(rules)\n    this.promise = Promise.resolve()\n  }\n  addItem(fn) {\n    const pp = this.promise.then(fn)\n    this.promise = pp\n    return pp\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').AsyncReplacer} _restream.AsyncReplacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Replacer} _restream.Replacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').TransformOptions} stream.TransformOptions\n */","export default tty\nexport const {\n  ReadStream,\n  WriteStream,\n  isatty,\n} = tty","export default util\nexport const {\n  TextDecoder,\n  TextEncoder,\n  callbackify,\n  debug,\n  debuglog,\n  deprecate,\n  error,\n  format,\n  getSystemErrorName,\n  inherits,\n  inspect,\n  isArray,\n  isBoolean,\n  isBuffer,\n  isDate,\n  isError,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isRegExp,\n  isString,\n  isSymbol,\n  isUndefined,\n  log,\n  print,\n  promisify,\n  puts,\n} = util","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar w = d * 7\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {string|number} val\n * @param {Object} [options]\n */\nexport default function(val, options = {}) {\n  var type = typeof val\n  if (type == 'string' && val.length > 0) {\n    const t = /** @type {string} */ (val)\n    return parse(t)\n  } else if (type == 'number' && isFinite(val)) {\n    const n = /** @type {number} */ (val)\n    return options.long ? fmtLong(n) : fmtShort(n)\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  )\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {string} str\n * @api private\n */\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 100) {\n    return\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  )\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n  case 'years':\n  case 'year':\n  case 'yrs':\n  case 'yr':\n  case 'y':\n    return n * y\n  case 'weeks':\n  case 'week':\n  case 'w':\n    return n * w\n  case 'days':\n  case 'day':\n  case 'd':\n    return n * d\n  case 'hours':\n  case 'hour':\n  case 'hrs':\n  case 'hr':\n  case 'h':\n    return n * h\n  case 'minutes':\n  case 'minute':\n  case 'mins':\n  case 'min':\n  case 'm':\n    return n * m\n  case 'seconds':\n  case 'second':\n  case 'secs':\n  case 'sec':\n  case 's':\n    return n * s\n  case 'milliseconds':\n  case 'millisecond':\n  case 'msecs':\n  case 'msec':\n  case 'ms':\n    return n\n  default:\n    return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {number} ms\n * @api private\n */\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms)\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day')\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour')\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute')\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second')\n  }\n  return ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')\n}\n\n/**\n * @license\n * Copyright (c) 2016 Zeit, Inc.\n * https://npmjs.org/ms\n */","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\nconst formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g\nconst formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/\n\nconst map = {\n  'b':  1,\n  'kb': 1 << 10,\n  'mb': 1 << 20,\n  'gb': 1 << 30,\n  'tb': Math.pow(1024, 4),\n  'pb': Math.pow(1024, 5),\n}\n\nconst parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: (string|undefined),\n *  decimalPlaces: (number|undefined),\n *  fixedDecimals: (boolean|undefined),\n *  thousandsSeparator: (string|undefined),\n *  unitSeparator: (string|undefined),\n *  }} [options] bytes options.\n *\n * @returns {?(string|number)}\n */\n\nexport default function bytes(value, options) {\n  if (typeof value == 'string') {\n    return parse(value)\n  }\n\n  if (typeof value == 'number') {\n    return format(value, options)\n  }\n\n  return null\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {Object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n * @returns {?string}\n */\nexport function format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null\n  }\n\n  const mag = Math.abs(value)\n  const thousandsSeparator = (options && options.thousandsSeparator) || ''\n  const unitSeparator = (options && options.unitSeparator) || ''\n  const decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2\n  const fixedDecimals = Boolean(options && options.fixedDecimals)\n  let unit = (options && options.unit) || ''\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map['pb']) {\n      unit = 'PB'\n    } else if (mag >= map['tb']) {\n      unit = 'TB'\n    } else if (mag >= map['gb']) {\n      unit = 'GB'\n    } else if (mag >= map['mb']) {\n      unit = 'MB'\n    } else if (mag >= map['kb']) {\n      unit = 'KB'\n    } else {\n      unit = 'B'\n    }\n  }\n\n  const val = value / map[unit.toLowerCase()]\n  let str = val.toFixed(decimalPlaces)\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1')\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator)\n  }\n\n  return str + unitSeparator + unit\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nexport function parse(val) {\n  if (typeof val == 'number' && !isNaN(val)) {\n    return val\n  }\n\n  if (typeof val != 'string') {\n    return null\n  }\n\n  // Test if the string passed is valid\n  const results = parseRegExp.exec(val)\n  let floatValue, unit = 'b'\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10)\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1])\n    unit = results[4].toLowerCase()\n  }\n\n  return Math.floor(map[unit] * floatValue)\n}","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import { format } from '../bytes'\nimport { c } from 'erte'\n\nexport default {\n  'f': format,\n  'fy'(v) {\n    return c(format(v) || '', 'yellow')\n  },\n  'fr'(v) {\n    return c(format(v) || '', 'red')\n  },\n  'fb'(v) {\n    return c(format(v) || '', 'blue')\n  },\n  'fg'(v) {\n    return c(format(v) || '', 'green')\n  },\n  'fc'(v) { return c(format(v) || '', 'cyan') },\n  'fm'(v) { return c(format(v) || '', 'magenta') },\n}\n","import tty from 'tty'\nimport { inspect, format } from 'util'\nimport ms from './ms'\nimport f from './modifiers/f'\n\nconst colors = [6, 2, 3, 4, 5, 1]\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\nconst inspectOpts = Object.keys(process.env).filter(key => {\n  return /^debug_/i.test(key)\n}).reduce((obj, key) => {\n  // Camel-case\n  const prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, (_, k) => {\n      return k.toUpperCase()\n    })\n\n  // Coerce string value into JS value\n  let val = process.env[key]\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false\n  } else if (val === 'null') {\n    val = null\n  } else {\n    val = Number(val)\n  }\n\n  obj[prop] = val\n  return obj\n}, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\nfunction useColors() {\n  return 'colors' in inspectOpts ?\n    Boolean(inspectOpts['colors']) :\n    tty.isatty(process.stderr.fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n * @param {!Array} args\n * @this {_debug.DebugFunction}\n */\nfunction formatArgs(args) {\n  const { namespace, useColors: uc, color, diff } = this\n\n  if (uc) {\n    const c = color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${namespace} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(colorCode + 'm+' + ms(diff) + '\\u001B[0m')\n  } else {\n    args[0] = getDate() + namespace + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (inspectOpts['hideDate']) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\nfunction log(...args) {\n  return process.stderr.write(format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n * @param {string} namespaces\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env['DEBUG'] = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env['DEBUG']\n  }\n}\n\n/**\n * Load `namespaces`.\n * @return {string} returns the previously persisted debug modes\n */\n\nfunction load() {\n  return process.env['DEBUG']\n}\n\n/**\n * Init logic for `debug` instances.\n * @param {_debug.DebugFunction} debug\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = { ...inspectOpts }\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst o = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n    .replace(/\\s*\\n\\s*/g, ' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n * @param {Object} v\n * @this {_debug.DebugFunction}\n */\nconst O = function(v) {\n  const opts = {\n    ...this.inspectOpts,\n    colors: this.useColors,\n  }\n  return inspect(v, opts)\n}\n\nconst formatters = { 'o': o, 'O': O, ...f }\n\n/** @type {_debug.Env} */\nconst NodeEnv = {\n  init,\n  log,\n  formatArgs,\n  save,\n  load,\n  useColors,\n  colors,\n  inspectOpts,\n  formatters,\n}\n\nexport default NodeEnv\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Env} _debug.Env\n */","class Debug {\n  /**\n   * Create a debugger with the given `namespace`.\n   * @param {_debug.Env} env\n   */\n  constructor(env) {\n    this.colors = env.colors\n    this.formatArgs = env.formatArgs\n    this.inspectOpts = env.inspectOpts\n    this.log = env.log\n    this.save = env.save\n    this.init = env.init\n\n    this.formatters = env.formatters || {}\n\n    /**\n     * Active `debug` instances.\n     * @type {Array<_debug.DebugFunction>}\n     */\n    this.instances = []\n    /**\n\t   * The currently active debug mode names.\n     * @type {Array<!RegExp>}\n\t   */\n    this.names = []\n    /**\n\t   * The currently active names to skip.\n     * @type {Array<!RegExp>}\n\t   */\n    this.skips = []\n  }\n  createDebug() {\n    const debug = this.getDebug()\n\n    // env-specific initialization logic for debug instances\n    if (typeof this.init == 'function') {\n      this.init(debug)\n    }\n\n    this.instances.push(debug)\n    return debug\n  }\n\n  /**\n   * @returns {_debug.DebugFunction}\n   */\n  getDebug() {\n    const formatters = this.formatters\n    const formatArgs = this.formatArgs\n    const log = this.log // comes from the env\n\n    /** @type {number} */\n    let prevTime\n    /** @type {_debug.DebugFunction} */\n    function debug(...args) {\n      if (!debug.enabled) return\n\n      // Set `diff` timestamp\n      const curr = Number(new Date())\n      const time = curr - (prevTime || curr)\n      debug.diff = time\n      debug.prev = prevTime\n      debug.curr = curr\n      prevTime = curr\n\n      args[0] = coerce(args[0])\n\n      if (typeof args[0] != 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O')\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0\n      args[0] = args[0].replace(/%([a-zA-Z%]+)/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match == '%%') {\n          return match\n        }\n        index++\n        const formatter = formatters[format]\n        if (formatter) {\n          const val = args[index]\n          match = formatter.call(debug, val)\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1)\n          index--\n        }\n        return match\n      })\n\n      // Apply env-specific formatting (colors, etc.)\n      formatArgs.call(debug, args)\n\n      const logFn = debug.log || log\n      logFn.apply(debug, args)\n    }\n    return debug\n  }\n  /**\n\t * Selects a color for a debug namespace\n\t * @param {string} namespace The namespace string for the for the debug instance to be colored\n\t * @return {number|string} An ANSI color code for the given namespace\n\t */\n  selectColor(namespace) {\n    let hash = 0\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = ((hash << 5) - hash) + namespace.charCodeAt(i)\n      hash |= 0 // Convert to 32bit integer\n    }\n\n    return this.colors[Math.abs(hash) % this.colors.length]\n  }\n  /**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {string} namespaces\n\t * @api public\n\t */\n  enable(namespaces) {\n    this.save(namespaces)\n\n    this.names = []\n    this.skips = []\n\n    let i\n    const split = (typeof namespaces == 'string' ? namespaces : '').split(/[\\s,]+/)\n    const len = split.length\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?')\n\n      if (namespaces[0] == '-') {\n        this.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))\n      } else {\n        this.names.push(new RegExp('^' + namespaces + '$'))\n      }\n    }\n\n    for (i = 0; i < this.instances.length; i++) {\n      const instance = this.instances[i]\n      instance.enabled = this.enabled(instance.namespace)\n    }\n  }\n  destroy(debug) {\n    const index = this.instances.indexOf(debug)\n    if (index !== -1) {\n      this.instances.splice(index, 1)\n      return true\n    }\n    return false\n  }\n  /**\n\t * Disable debug output.\n\t * @return {string} namespaces\n\t */\n  disable() {\n    const namespaces = [\n      ...this.names.map(toNamespace),\n      ...this.skips.map(toNamespace).map(namespace => '-' + namespace),\n    ].join(',')\n    this.enable('')\n    return namespaces\n  }\n  /**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n  enabled(name) {\n    if (name[name.length - 1] == '*') {\n      return true\n    }\n\n    let i\n    let len\n\n    for (i = 0, len = this.skips.length; i < len; i++) {\n      if (this.skips[i].test(name)) {\n        return false\n      }\n    }\n\n    for (i = 0, len = this.names.length; i < len; i++) {\n      if (this.names[i].test(name)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * @param {string} namespace\n * @this {_debug.DebugContext}\n */\nfunction extend(namespace, delimiter) {\n\n}\n\n/**\n * This is the common logic for both the Node.js and web browser implementations of `debug()`.\n * @param {_debug.Env} env\n */\nexport default function setup(env) {\n  const instance = new Debug(env)\n\n  /**\n   * Creates a function to log messages.\n   * @param {string} namespace\n   */\n  function createDebug(namespace) {\n    const debug = instance.createDebug()\n\n    debug.namespace = namespace\n    debug.useColors = env.useColors()\n    debug.enabled = instance.enabled(namespace)\n    debug.color = instance.selectColor(namespace)\n    /** @this {_debug.DebugContext} */\n    debug.destroy = function() {\n      instance.destroy(this)\n    }\n    /** @this {_debug.DebugContext} */\n    debug.extend = function(ns, delimiter) {\n      const newDebug = (this.namespace + (delimiter === undefined ? ':' : delimiter) + ns)\n      newDebug.log = this.log // don't know why this is here\n      return newDebug\n    }\n\n    instance.enable(env.load())\n\n    return debug\n  }\n  return createDebug\n}\n\n/**\n * Convert regexp to namespace.\n *\n * @param {!RegExp} regexp\n * @return {string} namespace\n * @private\n */\nfunction toNamespace(regexp) {\n  return regexp.toString()\n    .substring(2, regexp.toString().length - 2)\n    .replace(/\\.\\*\\?$/, '*')\n}\n\n/**\n * Coerce `val`.\n * @param {!Error|*} val\n * @return {*}\n * @private\n */\nfunction coerce(val) {\n  if (val instanceof Error) {\n    return val.stack || val.message\n  }\n  return val\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Env} _debug.Env\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugFunction} _debug.DebugFunction\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DebugContext} _debug.DebugContext\n */","import makeIo from './lib/make-io'\n\nconst makeProps = (props) => {\n  const keys = Object.keys(props)\n  return `{\n    ${keys.map((key) => {\n    const k = /-/.test(key) ? `'${key}'` : key\n    return `${k}: '${props[key]}'`\n  }).join(',\\n')}${keys.length ? ',' : ''}\n  }`\n}\n\n/**\n * @param {!_competent.ExportedComponent} component\n */\nconst makeComponent = (component) => {\n  const arr = []\n  arr.push(`key: '${component.key}'`)\n  arr.push(`id: '${component.id}'`)\n  if (Object.keys(component.props).length)\n    arr.push(`props: ${makeProps(component.props)}`)\n  const c = component.children.filter(Boolean)\n  if (c.length)\n    arr.push(`children: ${JSON.stringify(component.children)}`)\n  const j = arr.map((l) => `  ${l}`).join(',\\n') + ','\n  return `{\n${j}\n}`\n}\n\n/**\n * @param {!Array<!_competent.ExportedComponent>} components\n */\nconst makeJs = (components) => {\n  const s = components.map(makeComponent)\n  return '[' + s.join(',\\n') + ']'\n}\n\nconst defineIo = (io = true) => {\n  if (!io) return ''\n  return `${makeIo}\nconst io = makeIo(${typeof io == 'string' ? `'${io}'` : ''});`\n}\n\n/**\n * From the array of exported components, creates an ES6 modules script that will render them on a page using Preact.\n * @param {!Array<!_competent.ExportedComponent>} components The list of exported components\n * @param {string} componentsLocation The location of the module which exports a default object with components relative to where this file will be placed.\n * @param {boolean} [includeH=false] Imports the `h` pragma from preact. By default is disabled, because can be added automatically by `Depack` and `@idio/frontend`.\n * @param {!Object} [props] Properties.\n * @param {boolean|string} [io=false] Should the generated script use the intersection observer. When a string is passed, it is used as the root margin option (default is, `0px 0px 76px 0px`)\n */\nconst makeComponentsScript = (components, componentsLocation, includeH = false, props = {}, io = false ) => {\n  const p = Object.keys(props).map((propName) => {\n    const val = props[propName]\n    const s = `props.${propName} = ${val}`\n    return s\n  }).join('\\n')\n  const r = 'render(h(Comp, props, children), parent, el)'\n  const ifIo = io ? `el.render = () => {\n      ${r}\n    }\n    el.render.meta = { key, id }\n    io.observe(el)` : r\n  const s = `import { render${includeH ? ', h' : ''} } from 'preact'\n`+`import Components from '${componentsLocation}'\n\n${defineIo(io)}${makeJs(components)}\n  .map(({ key, id, props = {}, children }) => {\n    const el = document.getElementById(id)\n    if (!el) {\n      console.warn('Parent element for component %s with id %s not found', key, id)\n      return\n    }\n    const parent = el.parentElement\n    if (!parent) {\n      console.warn('Parent of element for component %s with id %s not found', key, id)\n      return\n    }\n    const Comp = Components[key]\n    if (!Comp) {\n      console.warn('Component with key %s was not found.', key)\n      return\n    }\n${p ? `    ${p}` : ''}\n    ${ifIo}\n  })\n`\n  return s\n}\n\n// render(h(Comp, props, children), parent, el)\n\nexport default makeComponentsScript\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').ExportedComponent} _competent.ExportedComponent\n */","// export default function makeIo(rootMargin = '0px 0px 76px 0px') {\n//   const io = new IntersectionObserver((entries) => {\n//     entries.forEach(({ target, isIntersecting }) => {\n//       if (isIntersecting) {\n//         if (target.render) {\n//           console.warn('rendering component %s into the element %s ',\n//             target.render.meta.key, target.render.meta.id)\n//           target.render()\n//           io.unobserve(target)\n//         }\n//       }\n//     })\n//   }, { rootMargin })\n//   return io\n// }\n\nexport default `function makeIo(rootMargin = '0px 0px 76px 0px') {\n  const io = new IntersectionObserver((entries) => {\n    entries.forEach(({ target, isIntersecting }) => {\n      if (isIntersecting) {\n        if (target.render) {\n          console.warn('rendering component %s into the element %s ',\n            target.render.meta.key, target.render.meta.id)\n          target.render()\n          io.unobserve(target)\n        }\n      }\n    })\n  }, { rootMargin })\n  return io\n}`","import render from '@depack/render'\nimport rexml from 'rexml'\nimport { Replaceable } from 'restream'\nimport { makeRe } from './lib'\nimport Debug from '@idio/debug'\n\nconst debug = Debug('competent')\n\n/**\n * Extracts, Renders And Exports For Dynamic Render JSX Components From Within HTML.\n * @param {!Object<string, function({ children: !Array<string> })>} components The components to look for and render.\n * @param {!_competent.Config} [conf] Options for the program. All functions will be called with the Replaceable instance as their `this` context.\n */\nconst competent = (components, conf = {}) => {\n  const { getId, getProps = (props, meta) => ({\n    ...props, ...meta }), markExported, onSuccess, onFail,\n  removeOnError = false, getContext, getReplacements } = conf\n\n  const re = makeRe(Object.keys(components))\n\n  /** @type {!_restream.AsyncReplacer} */\n  const replacement = async function (m, ws, pad, Component, key, position, str) {\n    debug('render %s', key)\n    try {\n      const instance = components[key]\n      const before = str.slice(0, position)\n      const after = str.slice(position + m.length)\n      if (/\u003c!--\\s*$/.test(before) && /^\\s*--\u003e/.test(after))\n        return m\n\n      // let initialPadding = 0\n      // const lastNewLine = before.lastIndexOf('\\n')\n      // if (lastNewLine != -1) initialPadding = position - lastNewLine - 1\n      // else initialPadding = position\n\n      const [{ content = '', props: htmlProps }] = rexml(key, Component)\n      let child = content\n\n      const children = [child]\n      let exported = false\n      let renderAgain = true\n      let recursiveRenderAgain = false\n      let pretty, lineLength\n      let id\n      let childContext, removeLine\n      const props = getProps.call(this, {\n        ...htmlProps,\n        children,\n      }, /** @type {!_competent.Meta} */ ({\n        export(value = true) { exported = value },\n        setPretty(p, l) { pretty = p; if (l) lineLength = l },\n        renderAgain(doRender = true, v = false) { renderAgain = doRender, recursiveRenderAgain = v },\n        setChildContext(context) { childContext = context },\n        removeLine(r = true) { removeLine = r },\n      }), key)\n      /** @type {preact.VNode} */\n      let hyperResult\n      try {\n        const promise = instance.call(this, props)\n        hyperResult = promise instanceof Promise ? await promise : promise\n      } catch (err) {\n        if (!err.message.startsWith('Class constructor'))\n          throw err\n        const Instance = /** @type {function(new:preact.Component)} */ (instance)\n        const i = new Instance()\n        hyperResult = i.render(props)\n      }\n      if (exported && !hyperResult.attributes.id) {\n        id = getId.call(this) // `c${splendid.random()}`\n        hyperResult.attributes.id = id\n      }\n      const renderOptions = {\n        pretty,\n        lineLength,\n      }\n      let r\n      if (typeof hyperResult == 'string') {\n        r = hyperResult\n      } else if (Array.isArray(hyperResult)) {\n        r = hyperResult.map((hr) => {\n          if (typeof hr == 'string') return hr\n          const res = render(hr, renderOptions)\n          return res\n        }).join('\\n')\n      } else {\n        r = render(hyperResult, renderOptions)\n      }\n      if (!r && removeLine) {\n        if (onSuccess) onSuccess.call(this, key)\n        return ''\n      }\n      r = (ws || '') + r.replace(/^/gm, pad)\n      if (renderAgain) { // new v render again by default\n        let childRules\n        if (getReplacements) {\n          childRules = getReplacements.call(this, key, recursiveRenderAgain)\n        } else {\n          if (recursiveRenderAgain)\n          // exclude the actual element \ud83e\udd37\u200d\n            childRules = {\n              re: upgradeRe(re, key),\n              replacement,\n            }\n          else childRules = { re, replacement }\n        }\n        const childRepl = new Replaceable(childRules)\n        if (getContext) {\n          const ctx = getContext.call(this, childContext)\n          Object.assign(childRepl, ctx)\n        }\n        r = await Replaceable.replace(childRepl, r)\n      }\n      if (exported)\n        markExported.call(this, key, hyperResult.attributes.id, htmlProps, children)\n      if (onSuccess) onSuccess.call(this, key)\n      return r\n    } catch (err) {\n      if (onFail) onFail.call(this, key, err, position, str)\n      if (removeOnError) return ''\n      return m\n    }\n  }\n  /** @type {_restream.Rule} */\n  const rule = {\n    re, replacement,\n  }\n  return rule\n}\n\nconst upgradeRe = (re, key) => {\n  const ure = new RegExp(re.source.replace(new RegExp(`([|(])${key}([|)])`),\n    (m, pb, pa) => {\n      if (pb == '|' && pa == '|') return '|'\n      if (pa == ')') return pa\n      if (pb == '(') return pb\n      return ''\n    }), re.flags)\n  return ure\n}\n\nexport default competent\nexport { default as makeComponentsScript } from './make-comps'\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').AsyncReplacer} _restream.AsyncReplacer\n */\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _competent.Config\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Meta} _competent.Meta\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').VNode} preact.VNode\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Component} preact.Component\n */\n","import NodeEnv from './node'\nimport setup from './common'\n\n/**\n * Creates a function to log messages.\n * @param {string} namespace\n */\nexport default function(namespace) {\n  if (!namespace) throw new Error('To use debug, pass the namespace.')\n  const node = setup(NodeEnv)\n  const debug = node(namespace)\n  return debug\n}","/**\n * @license\n * Competent: Render tags HTML as JSX components.\n *\n * Copyright (C) 2019 Art Deco\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport '@externs/preact' // can't set that in @depack/render's package.json yet\nimport '../types/externs'\nimport competent, { makeComponentsScript } from './'\n\nmodule.exports = {\n  '_competent': competent,\n  '_makeComponentsScript': makeComponentsScript,\n}","export const makeRe = (keys) => {\n  const k = `(${keys.join('|')})`\n  const s = '(?:\\\\s+(?!\\\\/>)[^>]*?)?' // before closing >\n  const re = new RegExp(`(\\\\n)?( *)(<${k}${s}(?:\\\\s*?/>|>[\\\\s\\\\S]*?<\\\\/\\\\4>))`, 'gm')\n  return re\n}"],
"names":["IS_NON_DIMENSIONAL","encodeEntities","s","replace","isLargeString","length","indexOf","JS_TO_CSS","getNodeProps","vnode","props","attributes","children","defaultProps","nodeName","undefined","i","mapAttributes","allAttributes","xml","isSvgMode","sort","selectValue","html","attrs","Object","keys","mappedAttributes","map","name","v","match","includes","class","for","srcset","toLowerCase","str","prop","val","test","__html","filter","a","Boolean","UNNAMED","VOID_ELEMENTS","INLINE_ELEMENTS","render","config","addDoctype","pretty","res","renderToString","context","opts","inner","shallow","renderRootComponent","shallowHighOrder","sortAttributes","initialPadding","closeVoidTags","lineLength","noPretty","ip","repeat","indentChar","prototype","c","_disable","__x","getDerivedStateFromProps","state","componentWillMount","rendered","getChildContext","displayName","Function","getFallbackComponentName","cl","nl","reduce","acc","current","newLength","join","isVoid","pieces","getLastLineLength","hasLarge","child","ret","childSvgMode","substring","lastPiece","component","toString","call","index","push","st","split","lastLine","mismatch","re","string","m","args","o","slice","p","capturedGroup","key","start","attributeRe","RegExp","nameRe","source","valRe","attributesRe","extractTags","tag","t","Array","isArray","tags","matches","simple","end1","end2","tagName","content","trim","extractProps","simpleAttribute","parseInt","$jscompDefaultExport","stream","Transform","Writable","checkRule","reObject","replacement","hasRe","type","hideStack","commonError","thrownError","Error","commonLine","stack","substr","li","lastIndexOf","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","ignoredModules","j","x","pathMatches","p1","getStackSegment","from","oneLine","splitStack","item","items","getEntryStack","transparent","stackSegment","getCallerFromArguments","caller","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","calleeStackLine","message","isError","stackMessage","stackHeading","assign","e","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","d","Buffer","concat","pipe","chunk","encoding","callback","collect","readable","promise","replaceable","input","Replaceable","rules","fr","_broke","_options","Replaceable$$module$node_modules$restream$src$Replaceable.replace","brake","forEach","promises","resolve","data","all","shift","next","Stream","end","tty","format","inspect","util","parse","isFinite","long","msAbs","Math","abs","ms","plural","h","round","JSON","stringify","String","exec","n","parseFloat","y","w","formatThousandsRegExp","formatDecimalsRegExp","pow","value","Number","mag","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","colors","color","cc","inspectOpts","process","env","obj","k","toUpperCase","NodeEnv","init","debug","log","stderr","write","formatArgs","namespace","uc","diff","colorCode","prefix","toISOString","Date","save","namespaces","load","useColors","isatty","fd","formatters","O","f","getDebug","enabled","curr","prevTime","prev","coerce","unshift","formatter","splice","apply","createDebug","instances","selectColor","hash","charCodeAt","enable","names","skips","len","instance","Debug","makeProps","makeComponent","arr","id","l","defineIo","io","makeIo","setup","destroy","debug.destroy","extend","debug.extend","ns","delimiter","newDebug","node","upgradeRe","ure","pb","pa","flags","module","exports","components","conf","competent","ws","pad","Component","position","before","after","htmlProps","exported","renderAgain","recursiveRenderAgain","childContext","removeLine","getProps","export","setPretty","doRender","setChildContext","hyperResult","err","startsWith","getId","renderOptions","hr","onSuccess","childRules","getReplacements","childRepl","getContext","ctx","markExported","onFail","removeOnError","meta","rule","componentsLocation","includeH","makeComponentsScript","propName","ifIo"]
}
